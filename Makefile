# requirements: git bash make python3-pip python3-venv
SHELL := /bin/bash

.PHONY: install # install build tools in a virtualenv
install:
	python3 -m venv .venv
	source .venv/bin/activate && \
	pip3 install wheel && \
	pip3 install --force git+https://github.com/nodiscc/hecat.git@1.2.2

.PHONY: import # import data from original list at https://github.com/awesome-selfhosted/awesome-selfhosted
import: clean install
	git clone --depth=1 https://github.com/awesome-selfhosted/awesome-selfhosted
	cp awesome-selfhosted/AUTHORS AUTHORS
	rm -rf tags/ software/ platforms/
	mkdir -p tags/ software/ platforms/
	source .venv/bin/activate && \
	hecat --config .hecat/import.yml

.PHONY: update_metadata # update metadata from project repositories/API
update_metadata:
	source .venv/bin/activate && \
	hecat --config .hecat/update-metadata.yml

.PHONY: awesome_lint # check data against awesome-selfhosted guidelines
awesome_lint:
	source .venv/bin/activate && \
	hecat --config .hecat/awesome-lint.yml

.PHONY: awesome_lint # check data against awesome-selfhosted guidelines (strict)
awesome_lint_strict:
	source .venv/bin/activate && \
	hecat --config .hecat/awesome-lint-strict.yml

.PHONY: export_markdown # render markdown export from YAML data (https://github.com/awesome-selfhosted/awesome-selfhosted)
export_markdown:
	# This is hacky but it lets us change template without forking hecat.
	sed -i -E "s/(not software\['source_code_url'\] ==)/'source_code_url' in software and \1/" .venv/lib/python*/site-packages/hecat/exporters/markdown_singlepage.py
	sed -i -E 's/## Software/## Entries/' .venv/lib/python*/site-packages/hecat/exporters/markdown_singlepage.py
	source .venv/bin/activate && hecat --config .hecat/export-markdown.yml

.PHONY: export_html # render HTML export from YAML data (https://awesome-selfhosted.net/)
export_html:
	rm -rf html/
	# These next lines are pretty hacky. But this allows us to make changes to the site template without needing to fork hecat.
	sed -i -E 's/^## Software$$/## Entries/' .venv/lib/python*/site-packages/hecat/exporters/markdown_multipage.py
	sed -i -E 's/^(This page lists all )projects/\1entries/' .venv/lib/python*/site-packages/hecat/exporters/markdown_multipage.py
	sed -i -E '/^<span class="stars">.*<\/span>$$/d' .venv/lib/python*/site-packages/hecat/exporters/markdown_multipage.py
	sed -i -E "s|^(.*?)\{% if software\['source_code_url'\] is defined %\}\{\{ software\['source_code_url'\] \}\}\{% else %\}\{\{ software\['website_url'\] \}\}\{% endif %\}(.*?)$$|\{% if software\['source_code_url'\] is defined %\}\1\{\{ software\['source_code_url'\] \}\}\2\{% endif %\}|" .venv/lib/python*/site-packages/hecat/exporters/markdown_multipage.py
	sed -i -E '/^<span class="\{\{ date_css_class \}\}".*<\/span>$$/d' .venv/lib/python*/site-packages/hecat/exporters/markdown_multipage.py	
	mkdir html && source .venv/bin/activate && hecat --config .hecat/export-html.yml
	sed -i 's|<a href="https://github.com/pradyunsg/furo">Furo</a>|<a href="https://github.com/nodiscc/hecat/">hecat</a>, <a href="https://www.sphinx-doc.org/">sphinx</a> and <a href="https://github.com/pradyunsg/furo">furo</a>. Content under <a href="https://github.com/njiticc/awesome-nicc/blob/main/LICENSE">CC-BY-SA 3.0</a> license. Adapted from <a href="https://github.com/awesome-selfhosted/awesome-selfhosted-data">awesome-selfhosted</a>. <a href="https://github.com/njiticc/awesome-nicc">Source code</a>.|' .venv/lib/python*/site-packages/furo/theme/furo/page.html
	source .venv/bin/activate && sphinx-build -b html -c .hecat/ html/md/ html/html/
	rm -rf html/html/.buildinfo html/html/objects.inv html/html/.doctrees awesome-selfhosted-html/*
	echo "# please do not scrape this site aggressively. Source code is available at https://github.com/njiticc/awesome-nicc." >| html/html/robots.txt

.PHONY: push_markdown # commit and push changes to the markdown repository
push_markdown:
	$(eval COMMIT_HASH=$(shell git rev-parse --short HEAD))
	git config user.name awesome-nicc-bot && git config user.email github-actions@github.com
	git add README.md && (git diff-index --quiet HEAD || git commit -m "[bot] build markdown from data $(COMMIT_HASH)")
	git push

.PHONY: push_html # commit and push changes to the HTML site repository (amend previous commit and force-push)
push_html:
	$(eval COMMIT_HASH=$(shell git rev-parse --short HEAD))
	git config user.name awesome-nicc-bot && git config user.email github-actions@github.com
	git add -f html && (git diff-index --quiet HEAD || git commit --amend -m "[bot] build HTML from data $(COMMIT_HASH)")
	git push

.PHONY: url_check # check URLs for dead links or other connection problems
url_check:
	source .venv/bin/activate && \
	hecat --config .hecat/url-check.yml

.PHONY: clean # clean files generated by automated tasks
clean:
	rm -rf awesome-selfhosted/ awesome-selfhosted-html/ html/

.PHONY: help # generate list of targets with descriptions
help:
	@grep '^.PHONY: .* #' Makefile | sed 's/\.PHONY: \(.*\) # \(.*\)/\1	\2/' | expand -t20
